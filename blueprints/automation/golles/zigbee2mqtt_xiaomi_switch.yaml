blueprint:
  name: Zigbee2MQTT - Xiaomi switch (WXKG01LM and WXKG11LM))
  description: |
    Automate actions for Xiaomi Mi Wireless Switch (WXKG01LM) and Aqara Wireless Mini Switch (WXKG11LM) connected via Zigbee2MQTT.
    This blueprint supports multiple press patterns:
    - **Single Press**: Trigger an action on a single press.
    - **Double Press**: Trigger an action on a double press.
    - **Triple Press**: Trigger an action on a triple press.
    - **Quadruple Press**: Trigger an action on a quadruple press.
    - **Hold**: Trigger an action when the button is held.
    - **Release**: Trigger an action when the button is released.

    Configure distinct actions for each press type and create versatile automations for your switch.
  domain: automation
  author: golles
  source_url: https://raw.githubusercontent.com/golles/Home-Assistant-Config/main/blueprints/automation/golles/zigbee2mqtt_xiaomi_switch.yaml
  input:
    switch:
      name: Xiaomi/Aqara Wireless Switch
      description: Select the switch connected via Zigbee2MQTT.
      selector:
        device:
          filter:
            - integration: mqtt
              manufacturer: Xiaomi
              model: Mi wireless switch
            - integration: mqtt
              manufacturer: Aqara
              model: Wireless mini switch
    single:
      name: Action for Single Press
      description: The action to execute on a single press.
      default: []
      selector:
        action: {}
    double:
      name: Action for Double Press
      description: The action to execute on a double press.
      default: []
      selector:
        action: {}
    triple:
      name: Action for Triple Press
      description: The action to execute on a triple press.
      default: []
      selector:
        action: {}
    quadruple:
      name: Action for Quadruple Press
      description: The action to execute on a quadruple press.
      default: []
      selector:
        action: {}
    hold:
      name: Action for Hold
      description: The action to execute when the button is held.
      default: []
      selector:
        action: {}
    release:
      name: Action for Release
      description: The action to execute when the button is released.
      default: []
      selector:
        action: {}

mode: restart
max_exceeded: silent

triggers:
  - trigger: device
    domain: mqtt
    device_id: !input switch
    type: action
    subtype: single
  - trigger: device
    domain: mqtt
    device_id: !input switch
    type: action
    subtype: double
  - trigger: device
    domain: mqtt
    device_id: !input switch
    type: action
    subtype: triple
  - trigger: device
    domain: mqtt
    device_id: !input switch
    type: action
    subtype: quadruple
  - trigger: device
    domain: mqtt
    device_id: !input switch
    type: action
    subtype: hold
  - trigger: device
    domain: mqtt
    device_id: !input switch
    type: action
    subtype: release

actions:
  - choose:
      - conditions: "{{ trigger.payload == 'single' }}"
        sequence: !input single

      - conditions: "{{ trigger.payload == 'double' }}"
        sequence: !input double

      - conditions: "{{ trigger.payload == 'triple' }}"
        sequence: !input triple

      - conditions: "{{ trigger.payload == 'quadruple' }}"
        sequence: !input quadruple

      - conditions: "{{ trigger.payload == 'hold' }}"
        sequence: !input hold

      - conditions: "{{ trigger.payload == 'release' }}"
        sequence: !input release
