blueprint:
  name: Zigbee2MQTT - Hue smart button - press and hold actions
  description: |
    Automate actions for the Philips Hue smart button connected via Zigbee2MQTT.
    - **Press Action:** Trigger a predefined action on a single button press.
    - **Hold Action:** Trigger a separate action on button hold, with a configurable delay to manage repeated triggers.

    This blueprint allows you to create flexible automations with delay to prevent excessive triggering on hold actions.
  domain: automation
  author: golles
  source_url: https://raw.githubusercontent.com/golles/Home-Assistant-Config/main/blueprints/automation/golles/zigbee2mqtt_hue_smart_button_press_and_hold_actions.yaml
  input:
    smart_button:
      name: Hue Smart Button Device
      description: The Hue smart button device connected via Zigbee2MQTT.
      selector:
        device:
          integration: mqtt
          manufacturer: Philips
          model: Hue smart button (8718699693985)
    press_action:
      name: Action on Press
      description: The action to execute when the button is pressed.
      default: []
      selector:
        action:
    hold_action:
      name: Action on Hold
      description: The action to execute when the button is held down.
      default: []
      selector:
        action:
    hold_delay:
      name: Hold Action delay
      description: The delay in seconds before the hold action can be triggered again.
      default: 3
      selector:
        number:
          min: 0
          max: 60
          unit_of_measurement: seconds

mode: single
max_exceeded: silent

triggers:
  - trigger: device
    domain: mqtt
    device_id: !input smart_button
    type: action
    subtype: "on"
  - trigger: device
    domain: mqtt
    device_id: !input smart_button
    type: action
    subtype: "off"
  - trigger: device
    domain: mqtt
    device_id: !input smart_button
    type: action
    subtype: hold

actions:
  - choose:
      # Button is being pressed.
      - conditions:
          - "{{ trigger.payload in ['on', 'off'] }}"
        sequence: !input press_action

      # Button is being hold.
      - conditions:
          - "{{ trigger.payload == 'hold' }}"
        sequence:
          - choose:
              - conditions:
                  - "{{ true }}"
                sequence: !input hold_action
          - delay:
              seconds: !input hold_delay
