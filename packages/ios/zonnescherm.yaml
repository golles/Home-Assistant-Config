ios:
  actions:
    - name: Zonnescherm dicht
      background_color: "#ffff00"
      label:
        text: Zonnescherm dicht
        color: "#000000"
      icon:
        icon: arrow-up-box
        color: "#000000"

    - name: Zonnescherm open
      background_color: "#ffff00"
      label:
        text: Zonnescherm open
        color: "#000000"
      icon:
        icon: arrow-down-box
        color: "#000000"

    - name: Zonnescherm helemaal open
      background_color: "#ffff00"
      label:
        text: Zonnescherm helemaal open
        color: "#000000"
      icon:
        icon: arrow-down-box
        color: "#000000"

automation:
  - id: ios_action_awning_command
    alias: iOS action - Zonnescherm
    mode: single
    max_exceeded: silent
    trigger:
      - platform: event
        event_type: ios.action_fired
        event_data:
          actionName: Zonnescherm dicht
      - platform: event
        event_type: ios.action_fired
        event_data:
          actionName: Zonnescherm open
      - platform: event
        event_type: ios.action_fired
        event_data:
          actionName: Zonnescherm helemaal open
    action:
      - variables:
          action_name: "{{ trigger.event.data.actionName }}"

      - choose:
          - conditions:
              - condition: template
                value_template: >-
                  {{ action_name == "Zonnescherm dicht" }}
            sequence:
              - alias: Close awning
                service: cover.close_cover
                target:
                  entity_id: cover.zonnescherm
          - conditions:
              - condition: template
                value_template: >-
                  {{ action_name == "Zonnescherm open" }}
            sequence:
              - alias: Open awning
                service: button.press
                target:
                  entity_id: button.zonnescherm_my_position
          - conditions:
              - condition: template
                value_template: >-
                  {{ action_name == "Zonnescherm  helemaal open" }}
            sequence:
              - alias: My position for awning
                service: cover.open_cover
                target:
                  entity_id: cover.zonnescherm

  - id: auto_close_awning
    alias: Zonnescherm automatisch sluiten
    mode: single
    max_exceeded: silent
    trigger:
      - platform: state
        entity_id: sensor.zon_positie
        from: Achter
        to: Voor
      - platform: state
        entity_id: sun.sun
        to: below_horizon
      - platform: numeric_state
        entity_id: sun.sun
        attribute: elevation
        below: 7
    condition:
      - condition: state
        entity_id: binary_sensor.zonnescherm_contact_contact
        state: "on"
    action:
      - alias: Close the awning
        service: cover.close_cover
        target:
          entity_id: cover.zonnescherm

  - id: ios_action_awning_can_be_opened
    alias: iOS action - Zonnescherm kan open
    mode: single
    max_exceeded: silent
    trigger:
      - platform: numeric_state
        entity_id: sensor.achtertuin_lichtsterkte_illuminance_lux
        above: 40000
      - platform: state
        entity_id: sensor.zon_positie
        from: Voor
        to: Achter
    condition:
      - condition: numeric_state
        entity_id: sensor.achtertuin_lichtsterkte_illuminance_lux
        above: 40000
      - condition: state
        entity_id: sensor.zon_positie
        state: Achter
      - condition: template
        value_template: >-
          {{ state_attr("weather.knmi_purmerend", "forecast")[0]["temperature"] | int > 20 }}
      - condition: template
        value_template: >-
          {{ state_attr("weather.knmi_purmerend", "forecast")[0]["precipitation_probability"] | int == 0 }}
      - condition: state
        entity_id: binary_sensor.zonnescherm_contact_contact
        state: "off"
    action:
      - alias: Set up variables for the actions
        variables:
          # Including an id in the action allows us to identify this script run and not accidentally trigger for other notification actions.
          action_open: "{{ 'OPEN_' ~ context.id }}"

      - alias: Ask to close the awning
        service: notify.all_phones
        data:
          message: De zon is achter, wil je het zonnescherm openen?
          data:
            tag: sun
            actions:
              - action: "{{ action_open }}"
                title: Ja, open

      - alias: Wait for a response
        wait_for_trigger:
          - platform: event
            event_type: mobile_app_notification_action
            event_data:
              action: "{{ action_open }}"

      - alias: Perform the action
        choose:
          - conditions: "{{ wait.trigger.event.data.action == action_open }}"
            sequence:
              - service: button.press
                target:
                  entity_id: button.zonnescherm_my_position

              - alias: Clear this notification on all devices
                service: notify.all_phones
                data:
                  message: clear_notification
                  data:
                    tag: sun
