automation:
  - id: lgc9_turn_on_wol
    alias: LG C9 - Turn on via Wake-On-LAN
    mode: single
    trigger:
      - platform: webostv.turn_on
        entity_id: media_player.lg_c9
    action:
      - service: wake_on_lan.send_magic_packet
        data:
          mac: !secret webostv_mac
          broadcast_address: !secret webostv_ip
          broadcast_port: 9

  - id: switch_soundbar_source_and_volume_when_tv_on
    alias: Automatisch soundbar source en volume zetten als de tv aan gaat
    mode: single
    trigger:
      - platform: state
        entity_id: media_player.lg_c9
        from: "off"
        to: "on"
    action:
      - service: shell_command.set_soundbar_source_and_volume
        data:
          ip: !secret lg_soundbar_ip
          source: 15 # HMDI ARC.
          volume: 12

shell_command:
  set_soundbar_source_and_volume: 'python /config/custom_scripts/lg_sl10.py "{{ ip }}" "{{ source }}" "{{ volume }}"'

script:
  play_livingroom_radio:
    alias: Speel radio in de woonkamer
    icon: mdi:radio
    mode: restart
    fields:
      stream:
        description: The stream to play
        example: https://stream.qmusic.nl/qmusic/mp3
    sequence:
      - choose:
        - conditions:
            - condition: state
              entity_id: media_player.lg_soundbar
              state: 
               - "off"
               - idle
            - condition: numeric_state
              entity_id: media_player.lg_soundbar
              attribute: volume_level
              above: 0.1 # 4 * 0.025
          sequence:
            - service: media_player.volume_set
              data:
                entity_id: media_player.lg_soundbar
                volume_level: 0.1 # 4 * 0.025

      - service: media_player.play_media
        data:
          entity_id: media_player.lg_soundbar
          media_content_id: "{{ stream }}"
          media_content_type: audio/mp4
  
  play_tv_with_source:
    alias: Speel tv met bron
    icon: mdi:television
    mode: restart
    fields:
      media_player:
        description: The media player to play the stream on
        example: media_player.tv
      source:
        description: The source to pick
        example: Youtube
    sequence:
      - choose:
        - conditions:
            - "{{ is_state(media_player, 'off') }}"
          sequence:
            - service: media_player.turn_on
              data:
                entity_id: "{{ media_player }}"
            - wait_template: >
                {{ not is_state(media_player, "off") }}
              timeout: "00:00:02"
              continue_on_timeout: false

      - service: media_player.select_source
        data:
          entity_id: "{{ media_player }}"
          source: "{{ source }}"

  play_livingroom_tv_source_ziggo:
    alias: Speel tv met bron ziggo
    icon: mdi:television
    mode: restart
    sequence:
      - choose:
        - conditions:
            - "{{ is_state('media_player.lg_c9', 'off') }}"
          sequence:
            - service: media_player.turn_on
              data:
                entity_id: media_player.mediabox

      - service: script.play_tv_with_source
        data:
          media_player: media_player.lg_c9
          source: Ziggo
