homeassistant:
  customize:
    binary_sensor.zonnescherm_contact_contact:
      device_class: awning # This shouldn't be a door.
    cover.zonnescherm:
      icon: mdi:storefront-outline

input_datetime:
  covers_down:
    name: Rolluiken dicht
    has_date: false
    has_time: true

cover:
  - platform: template
    covers:
      zonnescherm_template:
        device_class: awning
        friendly_name: Zonnescherm
        icon_template: mdi:storefront-outline
        value_template: >-
          {{ iif(states("binary_sensor.zonnescherm_contact_contact") == "on", "open", "closed") }}
        availability_template: >-
          {{ states("cover.zonnescherm") != "unavailable" }}
        position_template: >-
          {{ iif(states("binary_sensor.zonnescherm_contact_contact") == "on", 50, 0) }}
        open_cover:
          action: cover.open_cover
          target:
            entity_id: cover.zonnescherm
        close_cover:
          action: cover.close_cover
          target:
            entity_id: cover.zonnescherm
        stop_cover:
          action: cover.stop_cover
          target:
            entity_id: cover.zonnescherm

template:
  - button:
      - name: Logeerkamer rolgordijn voorkeurspositie
        icon: mdi:star
        press:
          - action: cover.set_cover_position
            data:
              position: 85
            target:
              entity_id: cover.logeerkamer

      - name: Keuken rolgordijn voorkeurspositie
        icon: mdi:star
        press:
          - action: cover.set_cover_position
            data:
              position: 80
            target:
              entity_id: cover.keuken

automation:
  - id: covers_down_set_daily_time
    alias: Rolluiken - Tijd voor sluiten dagelijks aanpassen
    mode: single
    triggers:
      - trigger: homeassistant
        event: start
      - trigger: time
        at: "12:00:00"
    actions:
      - action: input_datetime.set_datetime
        data:
          entity_id: input_datetime.covers_down
          time: >
            {% set currentDay = now().strftime("%j") | int %}
            {% set middleDay = 183 %}
            {% set longestDayOffsetMinutes = 45 %}
            {% set magicFactor = 2.5 %}
            {% set ofsetMinutes = (-((currentDay-middleDay) | abs) / magicFactor--longestDayOffsetMinutes) | round(0) %}

            {{ as_local((state_attr("sun.sun", "next_setting")) | as_datetime + timedelta(minutes = ofsetMinutes)).strftime("%H:%M:%S") }}

  # The next automation is make sure we reload the ingration once it's unavailble.
  # Copied from: https://github.com/iMicknl/ha-tahoma/issues/599#issuecomment-994596289
  - id: covers_overkiz_reload_integration
    alias: Rolluiken - Overkiz integratie herladen bij probleem
    mode: single
    triggers:
      - trigger: state
        entity_id: cover.slaapkamer
        to: unavailable
        for:
          minutes: 5 # Quick action.
      - trigger: state
        entity_id: cover.slaapkamer
        to: unavailable
        for:
          minutes: 60 # Habdle longer outages.
    actions:
      - alias: Reload Overkiz integration
        action: homeassistant.reload_config_entry
        target:
          entity_id: cover.slaapkamer

      - alias: Clear the notification
        action: persistent_notification.dismiss
        data:
          notification_id: config_entry_reconfigure

script:
  open_south_facing_covers_based_on_weather:
    alias: Open south facing covers based on weather
    mode: parallel
    sequence:
      - alias: Act based on predicted temperature
        if:
          - condition: numeric_state
            entity_id: sensor.knmi_max_temperatuur_vandaag
            above: 27
        then:
          - alias: It will be warm today, set south facing covers to their preference position
            action: button.press
            target:
              entity_id:
                - button.kledingkamer_my_position
                - button.slaapkamer_my_position
        else:
          - alias: Open south facing covers
            action: cover.open_cover
            target:
              entity_id:
                - cover.kledingkamer
                - cover.slaapkamer

      - alias: Set curtains to preference position
        action: button.press
        target:
          entity_id:
            - button.logeerkamer_rolgordijn_voorkeurspositie
            - button.keuken_rolgordijn_voorkeurspositie

  close_cover_window_state:
    alias: Close cover, depending on window state
    mode: parallel
    fields:
      cover_entity:
        name: Cover entity
        description: Cover entity
        required: true
        selector:
          entity:
            domain: cover
      window_entity:
        name: Door/window entity
        description: This should be closed (off) to make the cover close.
        required: true
        selector:
          entity:
            domain: binary_sensor
      wait_minutes:
        name: Wait period
        description: In case the window entity is open (true) at the moment of trigger, the cover will still be closed when the window is closed within this wait period.
        default: 120
        selector:
          number:
            min: 0
            max: 600
            unit_of_measurement: minutes
    sequence:
      - choose:
          - conditions:
              - "{{ is_state(window_entity, 'off') }}"
              - "{{ is_state(cover_entity, 'open') }}"
            sequence:
              - alias: Close the cover
                action: cover.close_cover
                target:
                  entity_id: "{{ cover_entity }}"

          - conditions:
              - "{{ is_state(window_entity, 'on') }}"
              - "{{ is_state(cover_entity, 'open') }}"
            sequence:
              - alias: Wait if the window is closed within a given time.
                wait_template: "{{ is_state(window_entity, 'off') }}"
                timeout:
                  minutes: "{{ wait_minutes }}"
                continue_on_timeout: false

              - alias: Wait a little to make sure it's really closed
                delay:
                  seconds: 5

              - alias: Close the cover now
                action: cover.close_cover
                target:
                  entity_id: "{{ cover_entity }}"
